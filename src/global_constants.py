# Definition of numeric IDs for industries
# 127 is last ID to be used (128 industry limit, zero-based)
# see also why 128 is a hard limit as of 2020 http://webster.openttdcoop.org/?channel=openttd&date=1586563200#1586641232
# if 128 is hit, will have to manually assign IDs per economy
# possibly auto-assignment, but non-alphabetised and with a placeholder option for removals, i.e. a system of 64 slots, and slots are occupied or not
# a pure alphabetised list for auto-IDs will constantly wreck savegames, does that matter?
industry_numeric_ids = dict(
	aluminium_plant = 0,
	ammonia_plant = 1,
	appliance_factory = 2,
	arable_farm = 3,
	assembly_plant = 4,
	basic_oxygen_furnace = 5,
	biorefinery = 6,
	blast_furnace = 7,
	body_plant = 8,
	brewery = 9,
	brick_works = 10,
	builders_yard = 11,
	bulk_terminal = 12,
	canola_field = 13,
	carbon_black_plant = 14,
	cement_plant = 15,
	chemical_plant = 16,
	chlor_alkali_plant = 17,
	cider_mill = 18,
	clay_pit = 19,
	coal_mine = 20,
	coffee_estate = 21,
	coke_oven = 22,
	concrete_plant = 23,
	copper_mine = 24,
#	copper_refinery = 25,
	copper_smelter = 26,
	cryo_plant = 27,
	dairy = 28,
	dairy_farm = 29,
	diamond_mine = 30,
	dredging_site = 31,
	elastomer_products_plant = 32,
	electric_arc_furnace = 33,
	engine_plant = 34,
	farm = 35,
	fish_farm = 36,
	fishing_grounds = 37,
	fishing_harbour = 38,
	flour_mill = 39,
	food_market = 40,
	food_processor = 41,
	forest = 42,
	foundry = 43,
	fruit_plantation = 44,
	furniture_factory = 45,
	general_store = 46,
	glass_works = 47,
	hardware_store = 48,
	herding_coop = 49,
	hotel = 50,
	integrated_steel_mill = 51,
	iron_ore_mine = 52,
	iron_works = 53,
	junk_yard = 54,
	lime_kiln = 55,
	limestone_mine = 56,
	liquids_terminal = 57,
	lumber_yard = 58,
	machine_shop = 59,
	manganese_mine = 60,
	metal_fabrication_plant = 61,
	metal_works = 62,
	metal_workshop = 63,
	mixed_farm = 64,
	nitrate_mine = 65,
	oil_refinery = 66,
	oil_rig = 67,
	oil_wells = 68,
	orchard_piggery = 69,
	paper_mill = 70,
	peatlands = 71,
	petrol_pump = 72,
	phosphate_mine = 73,
	pipework_fabricator = 74,
	plastics_plant = 75,
	plate_mill = 76,
	port = 77,
	potash_mine = 78,
	power_plant = 79,
	power_systems_factory = 80,
	precision_parts_plant = 81,
	pyrite_mine = 82,
	pyrite_smelter = 83,
	quarry = 84,
	ranch = 85,
	recycling_depot = 86,
	recycling_plant = 87,
	rubber_plantation = 88,
	sawmill = 89,
	scrap_yard = 90,
	section_and_bar_mill = 91,
	sheep_farm = 92,
	slag_grinding_plant = 93,
	smithy_forge = 94,
	soda_ash_mine = 95,
	steel_forge_and_foundry = 96,
	stockyard = 97,
	strip_mill = 98,
	sugar_refinery = 99,
	supply_yard = 100,
	textile_mill = 101,
	timber_yard = 102,
	tracked_machine_factory = 103,
	trading_post = 104,
	tube_and_pipe_mill = 105,
	tyre_plant = 106,
	vehicle_dealer = 107,
	vehicle_distributor = 108,
	vineyard = 109,
	wharf = 110,
	wire_rod_mill = 111,
	salt_mine = 112,
)



# Definition of industry tile numeric IDs
# tiles 0-xxx currently vacant

tile_numeric_ids = dict(
	aluminium_plant_tile_1 = 58 ,
	ammonia_plant_tile_1 = 59 ,
	appliance_factory_tile_1 = 60 ,
	arable_farm_tile_1 = 61 ,
	assembly_plant_tile_1 = 62 ,
	basic_oxygen_furnace_tile_1 = 63 ,
	basic_oxygen_furnace_tile_2 = 64 ,
	biorefinery_tile_1 = 65 ,
	blast_furnace_tile_1 = 66 ,
	blast_furnace_tile_2 = 67 ,
	body_plant_tile_1 = 68 ,
	brewery_tile_1 = 69 ,
	brewery_tile_2 = 70 ,
	brick_works_tile_1 = 71 ,
	builders_yard_tile_1 = 72 ,
	bulk_terminal_tile_1 = 73 ,
	bulk_terminal_tile_2 = 74 ,
	canola_field_tile_1 = 75 ,
	carbon_black_plant_tile_1 = 76 ,
	cement_plant_tile_1 = 77 ,
	chemical_plant_tile_1 = 78 ,
	chemical_plant_tile_2 = 79 ,
	chlor_alkali_plant_tile_1 = 80 ,
	chlor_alkali_plant_tile_2 = 81 ,
	chromite_mine_tile_1 = 82 ,
	chromite_mine_tile_2 = 83 ,
	chromite_mine_tile_3 = 84 ,
	cider_mill_tile_1 = 85 ,
	cider_mill_tile_2 = 86 ,
	civil_explosives_facility_tile_1 = 87 ,
	civil_explosives_facility_tile_2 = 88 ,
	clay_pit_tile_1 = 89 ,
	clay_pit_tile_2 = 90 ,
	coal_mine_tile_1 = 91 ,
	coffee_estate_tile_1 = 92 ,
	coffee_estate_tile_2 = 93 ,
	coke_oven_tile_1 = 94 ,
	coke_oven_tile_2 = 95 ,
	concrete_plant_tile_1 = 96 ,
	copper_concentrator_tile_1 = 97 ,
	copper_mine_tile_1 = 98 ,
#	copper_refinery_tile_1 = 99 ,
	copper_smelter_tile_1 = 100 ,
	cryo_plant_tile_1 = 101 ,
	dairy_farm_tile_1 = 102 ,
	dairy_tile_1 = 103 ,
	dairy_tile_2 = 104 ,
	diamond_mine_tile_1 = 105 ,
	diamond_mine_tile_2 = 106 ,
	dredging_site_tile_1 = 107 ,
	elastomer_products_plant_tile_1 = 108 ,
	elastomer_products_plant_tile_2 = 109 ,
	electric_arc_furnace_tile_1 = 110 ,
	electric_arc_furnace_tile_2 = 111 ,
	engine_plant_tile_1 = 112 ,
	ethylene_cracker_tile_1 = 113 ,
	ethylene_cracker_tile_2 = 114 ,
	factory_2_tile_1 = 115 ,
	factory_3_tile_1 = 116 ,
	farm_tile_1 = 117 ,
	ferrochrome_smelter_tile_1 = 118 ,
	fertiliser_plant_tile_1 = 119 ,
	fertiliser_plant_tile_2 = 120 ,
	fischer_tropsch_plant_tile_1 = 121 ,
	fish_farm_tile_1 = 122 ,
	fish_farm_tile_2 = 123 ,
	fishing_grounds_tile_1 = 124 ,
	fishing_harbour_tile_1 = 125 ,
	fishing_harbour_tile_2 = 126 ,
	fishing_village_tile_1 = 127 ,
	fishing_village_tile_2 = 128 ,
	flour_mill_tile_1 = 129 ,
	food_market_tile_1 = 130 ,
	food_processor_tile_1 = 131 ,
	forest_tile_1 = 132 ,
	forest_tile_2 = 133 ,
	foundry_tile_1 = 134 ,
	fruit_plantation_tile_1 = 135 ,
	fruit_plantation_tile_2 = 136 ,
	furniture_factory_tile_1 = 137 ,
	general_store_tile_1 = 138 ,
	glass_works_tile_1 = 139 ,
	hardware_store_tile_1 = 140 ,
	herding_coop_tile_1 = 141 ,
	hotel_tile_1 = 142 ,
	integrated_steel_mill_tile_1 = 143 ,
	integrated_steel_mill_tile_2 = 144 ,
	iron_ore_mine_tile_1 = 145 ,
	iron_ore_mine_tile_2 = 146 ,
	iron_ore_mine_tile_3 = 147 ,
	iron_works_tile_1 = 148 ,
	iron_works_tile_2 = 149 ,
	iron_works_tile_3 = 150 ,
	junk_yard_tile_1 = 151 ,
	latex_processor_tile_1 = 152 ,
	lime_kiln_tile_1 = 153 ,
	limestone_mine_tile_1 = 154 ,
	limestone_mine_tile_2 = 155 ,
	limestone_mine_tile_3 = 156 ,
	liquids_terminal_tile_1 = 157 ,
	liquids_terminal_tile_2 = 158 ,
	liquids_terminal_tile_3 = 159 ,
	lumber_yard_tile_1 = 160 ,
	lumber_yard_tile_2 = 161 ,
	machine_shop_tile_1 = 162 ,
	machine_works_tile_1 = 163 ,
	manganese_mine_tile_1 = 164 ,
	manganese_mine_tile_2 = 165 ,
	manganese_mine_tile_3 = 166 ,
	metal_fabrication_plant_tile_1 = 167 ,
	metal_works_tile_1 = 168 ,
	metal_workshop_tile_1 = 169 ,
	mixed_farm_tile_1 = 170 ,
	nitrate_mine_tile_1 = 171 ,
	oil_refinery_tile_1 = 172 ,
	oil_rig_tile_1 = 173 ,
	oil_wells_tile_1 = 174 ,
	oil_wells_tile_2 = 175 ,
	orchard_piggery_tile_1 = 176 ,
	orchard_piggery_tile_2 = 177 ,
	paper_mill_tile_1 = 178 ,
	peatlands_tile_1 = 179 ,
	peatlands_tile_2 = 180 ,
	petrol_pump_tile_1 = 181 ,
	phosphate_mine_tile_1 = 182 ,
	phosphate_mine_tile_2 = 183 ,
	phosphoric_acid_plant_tile_1 = 184 ,
	phosphoric_acid_plant_tile_2 = 185 ,
	pipework_fabricator_tile_1 = 186 ,
	plastics_plant_tile_1 = 187 ,
	plate_mill_tile_1 = 188 ,
	plaza_tile_1 = 189 ,
	polyethylene_plant_tile_1 = 190 ,
	polypropylene_plant_tile_1 = 191 ,
	port_tile_1 = 192 ,
	port_tile_2 = 193 ,
	port_tile_3 = 194 ,
	potash_mine_tile_1 = 195 ,
	potash_mine_tile_2 = 196 ,
	potash_mine_tile_3 = 197 ,
	power_plant_tile_1 = 198 ,
	power_systems_factory_tile_1 = 199 ,
	power_systems_factory_tile_2 = 200 ,
	precision_parts_plant_tile_1 = 201 ,
	pyrite_mine_tile_1 = 202 ,
	pyrite_mine_tile_2 = 203 ,
	pyrite_mine_tile_3 = 204 ,
	pyrite_smelter_tile_1 = 205 ,
	quarry_tile_1 = 206 ,
	quarry_tile_2 = 207 ,
	ranch_tile_1 = 208 ,
	recycling_depot_tile_1 = 209 ,
	recycling_plant_tile_1 = 210 ,
	rubber_plantation_tile_1 = 211 ,
	rubber_plantation_tile_2 = 212 ,
	salt_mine_tile_1 = 213 ,
	salt_mine_tile_2 = 214 ,
	sawmill_tile_1 = 215 ,
	scrap_yard_tile_1 = 216 ,
	section_and_bar_mill_tile_1 = 217 ,
	section_and_bar_mill_tile_2 = 218 ,
	sheep_farm_tile_1 = 219 ,
	slag_grinding_plant_tile_1 = 220 ,
	slag_grinding_plant_tile_2 = 221 ,
	smithy_forge_tile_1 = 222 ,
	soda_ash_mine_tile_1 = 223 ,
	soda_ash_mine_tile_2 = 224 ,
	solvay_plant_tile_1 = 225 ,
	solvay_plant_tile_2 = 226 ,
	steel_forge_and_foundry_tile_1 = 227 ,
	steel_forge_and_foundry_tile_2 = 228 ,
	steel_forge_and_foundry_tile_3 = 229 ,
	steel_mill_tile_1 = 230 ,
	stockyard_tile_1 = 231 ,
	strip_mill_tile_1 = 232 ,
	sugar_refinery_tile_1 = 233 ,
	sulphuric_acid_plant_tile_1 = 234 ,
	sulphuric_acid_plant_tile_2 = 235 ,
	supply_yard_tile_1 = 236 ,
	textile_mill_tile_1 = 237 ,
	timber_yard_tile_1 = 238 ,
	timber_yard_tile_2 = 239 ,
	tinplate_works_tile_1 = 240 ,
	tracked_machine_factory_tile_1 = 241 ,
	trading_post_tile_1 = 242 ,
	trading_post_tile_2 = 243 ,
	tube_and_pipe_mill_tile_1 = 244 ,
	tyre_plant_tile_1 = 245 ,
	vehicle_dealer_tile_1 = 246 ,
	vehicle_distributor_tile_1 = 247 ,
	vineyard_tile_1 = 248 ,
	vineyard_tile_2 = 249 ,
	vineyard_tile_3 = 250 ,
	wharf_tile_1 = 251 ,
	wharf_tile_2 = 252 ,
	wharf_tile_3 = 253 ,
	wire_rod_mill_tile_1 = 254 ,
)

grfid = "504C4953" #PLIS

metadata = {
    "dev_thread_url": "http://www.tt-forums.net/viewtopic.php?t=41607",
    "repo_url": "https://github.com/andythenorth/firs",
    "docs_url": "https://grf.farm/firs",
}

chameleon_cache_dir = ".chameleon_cache"

# specify location for intermediate files generated during build (nml, graphics, lang etc)
generated_files_dir = "generated"

# this is for nml or grfcodec, don't need to use python path module here
graphics_path = "generated/graphics/"

# OpenTTD's max date
max_game_date = 5000000

# amount of cargo required to trigger 'enhanced' production at primary industries
FARM_MINE_SUPPLY_REQUIREMENT = 16

# identifiers for different sets of random factors
# used to control how widely primary production is randomised when industry is constructed
# keep alphabetised, the implementation handles mapping this to the correct switches etc
primary_production_random_factor_sets = [
    "narrow_range",
    "medium_range",
    "wide_range",
]

graphics_temp_storage = dict(
    var_terrain_sprite=0,  # ID of terrain sprite (from baseset) for the tile
    var_fencesprite_ne=1,  # fence sprite to use on the NE border
    var_fencesprite_nw=2,  # fence sprite to use on the NW border
    var_fencesprite_se=3,  # fence sprite to use on the SE border
    var_fencesprite_sw=4,  # fence sprite to use on the SW border
    var_fence_offset_ne=5,  # y-offset for fence sprite to use on the NE border
    var_fence_offset_nw=6,  # y-offset for fence sprite to use on the NW border
    var_fence_offset_se=7,  # y-offset for fence sprite to use on the SE border
    var_fence_offset_sw=8,  # y-offset for fence sprite to use on the SW border
    var_use_fence_ne=9,  # draw fence in the NE
    var_use_fence_nw=10,  # draw fence in the NW
    var_use_fence_se=11,  # draw fence in the SE
    var_use_fence_sw=12,  # draw fence in the SW
    var_terrain_is_snow=13,  # must be set to 1 (true) or 0 (false)
    var_random_bits=14,  # some random bits to use as required
    var_magic_trees_hide_default=15,  # hide tree sprite for default (temperate, arctic below snowline)
    var_magic_trees_hide_snow=16,  # hide tree sprite for snow
    var_magic_trees_hide_tropic=17,  # hide tree sprite for snow
    var_hide_building=18,  # hide a building in spritelayout, must be set to 1 (true) or 0 (false)
    var_hide_building_snow=19,  # hide a snow building in spritelayout, must be set to 1 (true) or 0 (false)
)  # max register number must be 235; registers 236-255 are reserved for building sprite hide/show values

# used to magically extend ground spritesets for animated tiles, add a count for each industry animation length
animated_ground_tile_frame_counts = [1, 3, 6, 7, 10, 12, 31, 32]

# Company colour names for reference below
# COLOUR_DARK_BLUE
# COLOUR_PALE_GREEN
# COLOUR_PINK
# COLOUR_YELLOW
# COLOUR_RED
# COLOUR_LIGHT_BLUE
# COLOUR_GREEN
# COLOUR_DARK_GREEN
# COLOUR_BLUE
# COLOUR_CREAM
# COLOUR_MAUVE
# COLOUR_PURPLE
# COLOUR_ORANGE
# COLOUR_BROWN
# COLOUR_GREY
# COLOUR_WHITE

industry_colour_schemes = {
    # colours may be repeated to give them more weighting in the distribution
    # never use: white, orange, cream; these always look bad
    # names are just for memorability, and use rock stars etc, no semantics at all

    # default scheme is muted and removes red, yellow, standard blue, and two greens
    # includes grey, brown, mauve, purple, but at lower weighting
    "scheme_1_elton": [
        "COLOUR_DARK_BLUE",
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_PINK",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # for industries that use a lot of grey (concrete) in their sprites
    # removes yellow, grey, brown
    "scheme_2_dylan": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
    ],
    # the full set of colours, except white, cream, orange (which look bad)
    "scheme_3_hendrix": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # a fairly full set of colours, but no yellow, no blue (themed for cyro plant to avoid clash with yellow-blue pipes)
    "scheme_4_cher": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_DARK_GREEN",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # a fairly full set of colours, but excluding standard blue (themed for industries that use blue pipes)
    "scheme_5_alanis": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_DARK_GREEN",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # a fairly full set of colours, but excluding standard green, blue (clashes with industry appearance)
    "scheme_6_bruce": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # a fairly full set of colours, but excluding standard green, red, purple (clashes with industry appearance)
    "scheme_7_bowie": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard red, blue, purple, yellow, dark green (clashes with industry appearance)
    "scheme_8_bono": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard yellow, green (clashes with industry appearance)
    "scheme_8_haddaway": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard red, purple, yellow, green (clashes with industry appearance)
    "scheme_9_shania": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard green, purple (clashes with industry appearance)
    "scheme_10_wyclef": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard green, dark green, blue, purple (clashes with industry appearance)
    "scheme_11_liam": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard green, grey, purple (clashes with industry appearance)
    "scheme_12_mariah": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
    ],
    # excluding standard green, red, purple, dark green (clashes with industry appearance)
    "scheme_13_whitney": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding all greens, light blue (for industries that are predominantly light blue in sprites)
    "scheme_15_seal": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding standard green, red, dark green (clashes with industry appearance)
    "scheme_16_grohl": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_BLUE",
        "COLOUR_MAUVE",
        "COLOUR_PURPLE",
        "COLOUR_BROWN",
        "COLOUR_GREY",
    ],
    # excluding grey, mauve, brown (for industries that are predominantly off-white on concrete ground)
    "scheme_17_natalie": [
        "COLOUR_DARK_BLUE",
        "COLOUR_PALE_GREEN",
        "COLOUR_PINK",
        "COLOUR_YELLOW",
        "COLOUR_RED",
        "COLOUR_LIGHT_BLUE",
        "COLOUR_GREEN",
        "COLOUR_DARK_GREEN",
        "COLOUR_BLUE",
        "COLOUR_PURPLE",
    ],
}



# valid industry map colours, derived from an algorithm to ensure contrast against green / dark green / purple minimaps
# based on work by frosch, https://github.com/frosch123/quaking/tree/main/TTDPalette
valid_industry_map_colours = [
    183,
    64,
    61,
    166,
    45,
    151,
    157,
    191,
    141,
    178,
    189,
    55,
    186,
    43,
    148,
    5,
    116,
    160,
    127,
    143,
    170,
    49,
    37,
    146,
    214,
    8,
    172,
    177,
    181,
    194,
    24,
    168,
    155,
    210,
    169,
    70,
    119,
    26,
    69,
    85,
    56,
    19,
    121,
    105,
    125,
    144,
    209,
    164,
    16,
    63,
    111,
    65,
    10,
    126,
    62,
    104,
    207,
    190,
    83,
    142,
    72,
    33,
    162,
    173,
]
# we also know that some colours are safe, whatever the algorithm thinks
valid_industry_map_colours.extend([1, 15])

# valid cargo colours, derived from the valid map colours, adjusted for:
# - 191 replaced by 51 as 191 is the edge colour for cargo flow diagram
# - 3, 6, 16, 18, 24, 28, 33, 35, 44, 57, 70, 72, 81, 104, 105, 109, 114, 116, 137, 140, 144, 164, 170, 178 removed as they aren't legible on black cargo payment chart
# - first entry is 152, traditional colour for pax (assumes pax will always be cargo 0)
# - third entry is 15, traditional colour for mail (assumes mail will always be cargo 2)
valid_cargo_colours = [
    152,
    183,
    15,
    61,
    166,
    45,
    157,
    51,
    141,
    189,
    55,
    186,
    43,
    148,
    5,
    160,
    127,
    143,
    37,
    146,
    214,
    8,
    172,
    177,
    181,
    194,
    168,
    155,
    210,
    169,
    119,
    26,
    69,
    85,
    56,
    19,
    121,
    125,
    209,
    63,
    111,
    65,
    10,
    126,
    62,
    207,
    190,
    83,
    142,
    162,
    173,
    149,
    167,
    47,
    153,
    52,
    68,
    78,
    30,
    38,
    163,
    196,
    165,
    150,
    187,
]
